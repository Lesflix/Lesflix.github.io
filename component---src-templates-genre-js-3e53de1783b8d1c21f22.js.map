{"version":3,"file":"component---src-templates-genre-js-3e53de1783b8d1c21f22.js","mappings":"6KAqCA,IAjCA,YAA6B,IAATA,EAAQ,EAARA,KACZC,EAASD,EAAKE,YAAYD,OAC5BD,EAAKE,YAAYD,OACjB,cACJ,GAA8BE,EAAAA,EAAAA,WAAS,GAAhCC,EAAP,KAAgBC,EAAhB,KACA,OACE,gBAACC,EAAD,CACEC,aAAc,WACZF,GAAW,IAEbG,aAAc,WACZH,GAAW,IAEbI,cAAe,YACbC,EAAAA,EAAAA,UAASV,EAAKW,OAAOC,QAGvB,uBACEC,IAAKC,EAAAA,KAAAA,CAAQ,KAAgBb,GAAUc,QACvCC,IAAKhB,EAAKE,YAAYe,QAExB,uBACEC,QAAS,YACPR,EAAAA,EAAAA,UAASV,EAAKW,OAAOC,OAEvBO,UAAWf,EAAU,QAAU,WAE/B,uBAAKS,IAAKC,EAAAA,MAAAA,QAA0CE,IAAI,QAQhE,IAAMV,EAAgBc,EAAAA,EAAAA,IAAH,krB,sGChCnB,I,EAAMC,EAAoBD,EAAAA,EAAAA,IAAH,qdAqBvB,EAzBA,YAAqC,IAAbE,EAAY,EAAZA,SACtB,OAAO,gBAACD,EAAD,KAAoBC,I,wCCa7B,IAAMC,EAAyBH,EAAAA,EAAAA,IAAH,u6BA+C5B,EA5DA,YAA0C,IAAbI,EAAY,EAAZA,SAC3B,OACE,gBAACD,EAAD,KACGC,EAASC,OACND,EAASE,KAAI,SAAA1B,GAAI,OACf,uBAAKmB,UAAU,OAAOQ,KAAKC,EAAAA,EAAAA,MACzB,gBAACC,EAAA,EAAD,CAAU7B,KAAMA,QAGpB,S,UCWV,EAjBc,SAAC,GAAwB,IAAtB8B,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACNC,EAAaF,EAAKG,kBAAzBC,MACFC,EAAQC,EAAAA,EAAOL,EAASM,SAASC,QAAQ,MAAO,KACtD,OACE,gCACE,gBAACC,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,CAAQT,SAAUA,GAChB,gBAAC,EAAD,KACE,+BACKC,EAASP,OADd,MACyBU,GAEzB,gBAAC,EAAD,CAAmBX,SAAUQ","sources":["webpack://gatsby-starter-blog/./src/components/PostCard/PostCard.js","webpack://gatsby-starter-blog/./src/components/DivContainer.js","webpack://gatsby-starter-blog/./src/containers/PostListContainer.js","webpack://gatsby-starter-blog/./src/templates/genre.js"],"sourcesContent":["import styled from \"@emotion/styled\"\nimport { navigate } from \"gatsby\"\nimport React, { useState } from \"react\"\n\nfunction PostCard({ post }) {\n  const poster = post.frontmatter.poster\n    ? post.frontmatter.poster\n    : \"default.png\"\n  const [isHover, setIsHover] = useState(false)\n  return (\n    <PostCardStyle\n      onMouseEnter={() => {\n        setIsHover(true)\n      }}\n      onMouseLeave={() => {\n        setIsHover(false)\n      }}\n      onDoubleClick={() => {\n        navigate(post.fields.slug)\n      }}\n    >\n      <img\n        src={require(`../../images/${poster}`).default}\n        alt={post.frontmatter.title}\n      />\n      <div\n        onClick={() => {\n          navigate(post.fields.slug)\n        }}\n        className={isHover ? \"valid\" : \"unvalid\"}\n      >\n        <img src={require(`../../images/play.svg`).default} alt=\"\" />\n      </div>\n    </PostCardStyle>\n  )\n}\n\nexport default PostCard\n\nconst PostCardStyle = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 30px;\n  box-sizing: border-box;\n  border-radius: 12px;\n  overflow: hidden;\n  cursor: pointer;\n  position: relative;\n  &:hover {\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n      rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n      rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  }\n  .unvalid {\n    display: none;\n  }\n  .valid {\n    display: block;\n    width: 50%;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin: calc(-25%);\n    background-color: rgba(255, 255, 255, 0.4);\n  }\n  img {\n    display: block;\n    width: 100%;\n  }\n`\n","import styled from \"@emotion/styled\"\nimport React from \"react\"\n\nfunction DivContainer({ children }) {\n  return <DivContainerStyle>{children}</DivContainerStyle>\n}\n\nconst DivContainerStyle = styled.div`\n  overflow: hidden;\n  * {\n    margin: 0;\n    padding: 0;\n    color: var(--themFont);\n    font-size: 2vw;\n  }\n  @media screen and (min-width: 1920px) {\n    margin: 22px 34px;\n  }\n  @media screen and (min-width: 1080px) and (max-width: 1919px) {\n    margin: 22px 34px;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1079px) {\n    margin: 22px 34px;\n  }\n  @media screen and (max-width: 767px) {\n    margin: 12px;\n  }\n`\nexport default DivContainer\n","import styled from \"@emotion/styled\"\nimport React from \"react\"\nimport PostCard from \"../components/PostCard/PostCard\"\nimport { v1 as uuid } from \"uuid\"\nfunction PostListContainer({ postList }) {\n  return (\n    <PostListContainerStyle>\n      {postList.length\n        ? postList.map(post => (\n            <div className=\"item\" key={uuid()}>\n              <PostCard post={post} />\n            </div>\n          ))\n        : \"준비 중\"}\n    </PostListContainerStyle>\n  )\n}\nconst PostListContainerStyle = styled.div`\n  width: fit-content;\n  .item {\n    float: left;\n  }\n  &::after {\n    content: \"\";\n    display: block;\n    clear: both;\n    visibility: hidden;\n  }\n  @media screen and (min-width: 1920px) {\n    .item {\n      padding: 20px;\n      width: 10%;\n    }\n    margin: 30px -10px 0 0;\n  }\n  @media screen and (min-width: 1080px) and (max-width: 1919px) {\n    .item {\n      padding: 20px;\n      width: 20%;\n    }\n    margin: 25px -10px 0 0;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1079px) {\n    .item {\n      padding: 16px;\n      width: 25%;\n    }\n    margin: 20px -8px 0 0;\n  }\n  @media screen and (min-width: 375px) and (max-width: 767px) {\n    .item {\n      padding: 8px;\n      width: 33%;\n    }\n    margin: 15px -4px 0 0;\n  }\n  @media screen and (max-width: 374px) {\n    .item {\n      padding: 6px;\n      width: 50%;\n    }\n    margin: 10px -3px 0 0;\n  }\n`\nexport default PostListContainer\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport DivContainer from \"../components/DivContainer\"\nimport Layout from \"../components/Layout\"\nimport HeaderContainer from \"../containers/HeaderContainer\"\nimport PostListContainer from \"../containers/PostListContainer\"\nimport { genres } from \"../const/genres\"\nconst Genre = ({ data, location }) => {\n  const { nodes: PostList } = data.allMarkdownRemark\n  const genre = genres[location.pathname.replace(/\\//g, \"\")]\n  return (\n    <>\n      <HeaderContainer />\n      <Layout location={location}>\n        <DivContainer>\n          <h1>\n            총 {PostList.length}개의 {genre}\n          </h1>\n          <PostListContainer postList={PostList} />\n        </DivContainer>\n      </Layout>\n    </>\n  )\n}\nexport default Genre\n\nexport const pageQuery = graphql`\n  query filteredPost($genre: String) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___release], order: DESC }\n      filter: { frontmatter: { genre: { eq: $genre } } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          description\n          genre\n          poster\n          release\n          ott\n          countries\n          cover\n          end\n        }\n      }\n      totalCount\n    }\n  }\n`\n"],"names":["post","poster","frontmatter","useState","isHover","setIsHover","PostCardStyle","onMouseEnter","onMouseLeave","onDoubleClick","navigate","fields","slug","src","require","default","alt","title","onClick","className","styled","DivContainerStyle","children","PostListContainerStyle","postList","length","map","key","uuid","PostCard","data","location","PostList","allMarkdownRemark","nodes","genre","genres","pathname","replace","HeaderContainer","Layout"],"sourceRoot":""}