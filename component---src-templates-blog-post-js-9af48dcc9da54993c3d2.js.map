{"version":3,"file":"component---src-templates-blog-post-js-9af48dcc9da54993c3d2.js","mappings":"sPAkCA,I,EAAA,EA/BA,YAA+C,IAAnBA,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KACpC,OACE,uBAAKC,UAAU,iBACb,sBACEC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGR,GACC,gBAAC,EAAAS,KAAD,CAAMC,GAAIV,EAASW,OAAOC,KAAMC,IAAI,QAApC,KACKb,EAASc,YAAYC,QAI9B,0BACGd,GACC,gBAAC,EAAAQ,KAAD,CAAMC,GAAIT,EAAKU,OAAOC,KAAMC,IAAI,QAC7BZ,EAAKa,YAAYC,MADpB,UCxBCC,EAAO,CAClBC,KAAI,CAAEC,IAAK,0CAA2CC,OAAO,GAC7DC,OAAM,CAAEF,IAAK,oCAAqCC,OAAO,GACzDE,KAAI,CAAEH,IAAK,wCAAyCC,OAAO,GAC3DG,QAAO,CAAEJ,IAAK,GAAIC,OAAO,GACzBI,SAAQ,CACNL,IAAK,0CACLC,OAAO,GAETK,YAAW,CAAEN,IAAK,GAAIC,OAAO,GAC7BM,OAAM,CAAEP,IAAK,GAAIC,OAAO,GACxBO,MAAK,CACHR,IAAK,kDACLC,OAAO,ICQX,I,EAAMQ,EAAYC,EAAAA,EAAAA,IAAH,sQAWf,EA5BA,YAAkC,IAAfC,EAAc,EAAdA,IAAKd,EAAS,EAATA,MACtB,OACE,gBAACY,EAAD,KACGE,EACC,uBACEC,QAAS,YACPC,EAAAA,EAAAA,UAAS,GAAGf,EAAKa,GAAKX,KAAMF,EAAKa,GAAKV,MAAQJ,EAAQ,MAExDiB,IAAKC,EAAAA,KAAAA,CAAQ,KAAyBJ,EAA1B,QAAqCK,QACjDC,IAAK,CAAEN,IAAAA,KAGT,a,UCHR,I,EAAMO,EAAeR,EAAAA,EAAAA,IAAH,6EAKlB,EAdA,YAA+C,IAAnBS,EAAkB,EAAlBA,QAAStB,EAAS,EAATA,MACnC,OACE,gBAACqB,EAAD,KACGC,EAAQC,KAAI,SAAAT,GAAG,OACd,gBAAC,EAAD,CAASU,IAAKC,EAAAA,EAAMzB,MAAOA,EAAOc,IAAKA,SCqB/C,I,EAAMY,EAAWb,EAAAA,EAAAA,IAAH,qZAuBd,EAhDA,YAAgC,IAAbc,EAAY,EAAZA,SACT3B,EAA0C2B,EAA1C3B,MAAO4B,EAAmCD,EAAnCC,YAAaC,EAAsBF,EAAtBE,QAASf,EAAaa,EAAbb,IAAKgB,EAAQH,EAARG,IAC1C,OACE,gBAACJ,EAAD,KACE,uBAAKvC,UAAU,SAASa,GACxB,uBAAKb,UAAU,SACb,2BACE,0BAAQA,UAAU,WAAlB,OACA,2BACG0C,EADH,MACeC,EAAM,QAAU,KAGjC,2BACE,0BAAQ3C,UAAU,WAAlB,MACA,+BAAOyC,IAET,2BACE,0BAAQzC,UAAU,WAAlB,SACA,gBAAC,EAAD,CAAkBa,MAAOA,EAAOsB,QAASR,QCDnD,I,EAAMiB,EAA4BlB,EAAAA,EAAAA,QAAH,mpBAKH,gBAAGmB,EAAH,EAAGA,OAAH,OAAiBA,GAAkB,MA+B/D,EAtDA,YAA6C,IAAbL,EAAY,EAAZA,SACtB3B,EAA6B2B,EAA7B3B,MAAOiC,EAAsBN,EAAtBM,UAAWC,EAAWP,EAAXO,OAC1B,OACE,gBAACH,EAAD,CAA2BC,OAAQC,GACjC,uBAAK9C,UAAU,aACb,uBAAKA,UAAU,UACb,uBACE8B,IACEC,EAAAA,KAAAA,CAAQ,MAAagB,GAAkB,gBAAiBf,QAE1DC,IAAKpB,KAGT,gBAAC,EAAD,CAAS2B,SAAUA,OCuB3B,EA/ByB,SAAC,GAAwB,IAAtBQ,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACVrD,EAAyBkD,EAAzBlD,SAAUC,EAAeiD,EAAfjD,KAAMqD,EAASJ,EAATI,KACxB,EAA8CF,EAAKtC,YAA3CC,EAAR,EAAQA,MAAO4B,EAAf,EAAeA,YAAaY,EAA5B,EAA4BA,QAASC,EAArC,EAAqCA,KACrC,OACE,gCACE,gBAACC,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,CAAQP,SAAUA,GAChB,gBAACQ,EAAA,EAAD,CAAK5C,MAAOA,EAAO4B,YAAaA,GAAeY,IAC/C,gBAACK,EAAD,CACE1D,UAAU,YACV2D,WAAS,EACTC,SAAS,6BAET,gBAAC,EAAD,CACEpB,SAAQ,iBACHU,EAAKtC,YADF,CAENkC,UAAWM,MAAAA,GAAAA,EAAMS,UAAYT,MAAAA,OAAlB,EAAkBA,EAAMS,UAAY,OAGnD,2BACEC,wBAAyB,CAAEC,OAAQT,GACnCU,SAAS,iBAGb,gBAAC,EAAD,CAAkBlE,SAAUA,EAAUC,KAAMA,OAO9C2D,EAAWhC,EAAAA,EAAAA,QAAH,sW,qBCxCd,IAAIU,EAAM,CACT,aAAc,KACd,eAAgB,KAChB,kBAAmB,KACnB,aAAc,KACd,WAAY,KACZ,YAAa,KACb,cAAe,KACf,WAAY,MAIb,SAAS6B,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAElC,EAAK8B,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOnC,EAAI8B,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKtC,IAEpB6B,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK","sources":["webpack://gatsby-starter-blog/./src/containers/PostNavContainer.js","webpack://gatsby-starter-blog/./src/const/otts.js","webpack://gatsby-starter-blog/./src/components/OttIcon/OttIcon.js","webpack://gatsby-starter-blog/./src/containers/OttListContainer.js","webpack://gatsby-starter-blog/./src/components/InfoBox/InfoBox.js","webpack://gatsby-starter-blog/./src/containers/PostContentContainer.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js","webpack://gatsby-starter-blog/./src/images/ott-icon/ sync ^\\.\\/.*\\.svg$"],"sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\n\nfunction PostNavContainer({ previous, next }) {\n  return (\n    <nav className=\"blog-post-nav\">\n      <ul\n        style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        }}\n      >\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default PostNavContainer\n","export const otts = {\n  왓챠: { url: \"https://watcha.com/browse/search?query=\", query: true },\n  넷플릭스: { url: \"https://www.netflix.com/search?q=\", query: true },\n  티빙: { url: \"https://www.tving.com/search?keyword=\", query: true },\n  쿠팡플레이: { url: \"\", query: true },\n  디즈니플러스: {\n    url: \"https://www.disneyplus.com/ko-kr/search\",\n    query: false,\n  },\n  아마존프레임비디오: { url: \"\", query: true },\n  애플티비: { url: \"\", query: true },\n  웨이브: {\n    url: \"https://www.wavve.com/search/search?searchWord=\",\n    query: true,\n  },\n}\n","import styled from \"@emotion/styled\"\nimport React from \"react\"\nimport { otts } from \"../../const/otts\"\nimport { navigate } from \"gatsby\"\nfunction OttIcon({ ott, title }) {\n  return (\n    <IconStyle>\n      {ott ? (\n        <img\n          onClick={() => {\n            navigate(`${otts[ott].url}${otts[ott].query ? title : \"\"}`)\n          }}\n          src={require(`../../images/ott-icon/${ott}.svg`).default}\n          alt={{ ott }}\n        />\n      ) : (\n        \"언제 가져올꺼냐\"\n      )}\n    </IconStyle>\n  )\n}\nconst IconStyle = styled.div`\n  width: calc(100 / 375 * 25vw);\n  height: calc(100 / 375 * 25vw);\n  box-shadow: rgba(255, 255, 255, 0.16) 0px 1px 4px;\n  cursor: pointer;\n  img {\n    width: 100%;\n  }\n  border-radius: calc(100 / 375 * 25px);\n  overflow: hidden;\n`\nexport default OttIcon\n","import styled from \"@emotion/styled\"\nimport React from \"react\"\nimport OttIcon from \"../components/OttIcon/OttIcon\"\nimport { v1 as uuid } from \"uuid\"\nfunction OttListContainer({ ottList, title }) {\n  return (\n    <OttListStyle>\n      {ottList.map(ott => (\n        <OttIcon key={uuid} title={title} ott={ott} />\n      ))}\n    </OttListStyle>\n  )\n}\nconst OttListStyle = styled.div`\n  display: flex;\n  margin-top: 10px;\n  gap: 10px;\n`\nexport default OttListContainer\n","import styled from \"@emotion/styled\"\nimport React from \"react\"\nimport OttListContainer from \"../../containers/OttListContainer\"\n\nfunction InfoBox({ postData }) {\n  const { title, description, release, ott, end } = postData\n  return (\n    <BoxStyle>\n      <div className=\"title\">{title}</div>\n      <div className=\"about\">\n        <div>\n          <strong className=\"summary\">방영일</strong>\n          <div>\n            {release} ~ {end ? \"방영 종료\" : \"\"}\n          </div>\n        </div>\n        <div>\n          <strong className=\"summary\">개요</strong>\n          <div> {description}</div>\n        </div>\n        <div>\n          <strong className=\"summary\">보러가기 </strong>\n          <OttListContainer title={title} ottList={ott} />\n        </div>\n      </div>\n    </BoxStyle>\n  )\n}\n\nconst BoxStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  z-index: 10;\n  font-size: 1.2vw;\n  flex: 2;\n  .title {\n    width: 100%;\n    font-size: 3.5vw;\n    font-weight: 700;\n    margin-bottom: 15px;\n  }\n  .about {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin-left: 10px;\n    .summary {\n      font-size: 2vw;\n    }\n  }\n`\nexport default InfoBox\n","import styled from \"@emotion/styled\"\nimport React from \"react\"\nimport InfoBox from \"../components/InfoBox/InfoBox\"\nfunction PostContentContainer({ postData }) {\n  const { title, posterUrl, poster } = postData\n  return (\n    <PostContentContainerStyle $bgImg={posterUrl}>\n      <div className=\"container\">\n        <div className=\"poster\">\n          <img\n            src={\n              require(`../images/${poster ? poster : \"default.png\"}`).default\n            }\n            alt={title}\n          />\n        </div>\n        <InfoBox postData={postData} />\n      </div>\n    </PostContentContainerStyle>\n  )\n}\nconst PostContentContainerStyle = styled.section`\n  padding: 50px 0;\n  position: relative;\n  &::before {\n    content: \"\";\n    background-image: url(${({ $bgImg }) => ($bgImg ? $bgImg : \"\")});\n    background-size: cover;\n    background-repeat: no-repeat;\n    opacity: 0.2;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n  }\n  .container {\n    display: flex;\n    margin: 0 auto;\n    width: 80vw;\n    max-width: 1080px;\n    gap: 30px;\n    align-items: center;\n\n    .poster {\n      z-index: 30;\n      border-radius: 12px;\n      overflow: hidden;\n      width: 50%;\n      flex: 1;\n      img {\n        display: block;\n        width: 100%;\n      }\n    }\n  }\n`\nexport default PostContentContainer\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/Seo\"\nimport HeaderContainer from \"../containers/HeaderContainer\"\nimport styled from \"@emotion/styled\"\nimport PostNavContainer from \"../containers/PostNavContainer\"\nimport PostContentContainer from \"../containers/PostContentContainer\"\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const { previous, next, file } = data\n  const { title, description, excerpt, html } = post.frontmatter\n  return (\n    <>\n      <HeaderContainer />\n      <Layout location={location}>\n        <Seo title={title} description={description || excerpt} />\n        <PostMain\n          className=\"blog-post\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <PostContentContainer\n            postData={{\n              ...post.frontmatter,\n              posterUrl: file?.publicURL ? file?.publicURL : \"\",\n            }}\n          />\n          <section\n            dangerouslySetInnerHTML={{ __html: html }}\n            itemProp=\"articleBody\"\n          />\n        </PostMain>\n        <PostNavContainer previous={previous} next={next} />\n      </Layout>\n    </>\n  )\n}\n\nexport default BlogPostTemplate\nconst PostMain = styled.article`\n  @media screen and (min-width: 1920px) {\n    padding: 22px 34px;\n  }\n  @media screen and (min-width: 1080px) and (max-width: 1919px) {\n    padding: 22px 34px;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1079px) {\n    padding: 22px 34px;\n  }\n  @media screen and (max-width: 767px) {\n    padding: 12px;\n  }\n`\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n    $cover: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        description\n        genre\n        poster\n        release\n        ott\n        countries\n        cover\n        end\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    file(base: { eq: $cover }, relativeDirectory: { eq: \"cover\" }) {\n      publicURL\n    }\n  }\n`\n","var map = {\n\t\"./넷플릭스.svg\": 7461,\n\t\"./디즈니플러스.svg\": 5654,\n\t\"./아마존프라임비디오.svg\": 4634,\n\t\"./애플티비.svg\": 3367,\n\t\"./왓챠.svg\": 8166,\n\t\"./웨이브.svg\": 3984,\n\t\"./쿠팡플레이.svg\": 8114,\n\t\"./티빙.svg\": 1028\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2479;"],"names":["previous","next","className","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","frontmatter","title","otts","왓챠","url","query","넷플릭스","티빙","쿠팡플레이","디즈니플러스","아마존프레임비디오","애플티비","웨이브","IconStyle","styled","ott","onClick","navigate","src","require","default","alt","OttListStyle","ottList","map","key","uuid","BoxStyle","postData","description","release","end","PostContentContainerStyle","$bgImg","posterUrl","poster","data","location","post","markdownRemark","file","excerpt","html","HeaderContainer","Layout","Seo","PostMain","itemScope","itemType","publicURL","dangerouslySetInnerHTML","__html","itemProp","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}