{"version":3,"file":"component---src-templates-genre-js-a32521f5ccf2cc1aaa56.js","mappings":"gNAOA,I,EAAMA,EAAoBC,EAAAA,EAAAA,IAAH,qdAqBvB,EAzBA,YAAqC,IAAbC,EAAY,EAAZA,SACtB,OAAO,gBAACF,EAAD,KAAoBE,I,wCCa7B,IAAMC,EAAyBF,EAAAA,EAAAA,IAAH,u/BAyD5B,EAtEA,YAA0C,IAAbG,EAAY,EAAZA,SAC3B,OACE,gBAACD,EAAD,KACGC,EAASC,OACND,EAASE,KAAI,SAAAC,GAAI,OACf,uBAAKC,UAAU,OAAOC,KAAKC,EAAAA,EAAAA,MACzB,gBAACC,EAAA,EAAD,CAAUJ,KAAMA,QAGpB,SCYV,G,QAjBc,SAAC,GAAwB,IAAD,EAArBK,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACNC,EAAaF,EAAKG,kBAAzBC,MACFC,EAAK,UAAGJ,EAASK,aAAZ,aAAG,EAAgBC,KAC9B,OACE,gCACE,gBAACC,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,CAAQR,SAAUA,GAChB,gBAAC,EAAD,KACE,+BACKC,EAAST,OADd,MACyBY,GAEzB,gBAAC,EAAD,CAAmBb,SAAUU","sources":["webpack://gatsby-starter-blog/./src/components/DivContainer.js","webpack://gatsby-starter-blog/./src/containers/PostListContainer.js","webpack://gatsby-starter-blog/./src/templates/genre.js"],"sourcesContent":["import styled from \"@emotion/styled\"\nimport React from \"react\"\n\nfunction DivContainer({ children }) {\n  return <DivContainerStyle>{children}</DivContainerStyle>\n}\n\nconst DivContainerStyle = styled.div`\n  overflow: hidden;\n  * {\n    margin: 0;\n    padding: 0;\n    color: var(--themFont);\n    font-size: 2vw;\n  }\n  @media screen and (min-width: 1920px) {\n    margin: 22px 34px;\n  }\n  @media screen and (min-width: 1080px) and (max-width: 1919px) {\n    margin: 22px 34px;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1079px) {\n    margin: 22px 34px;\n  }\n  @media screen and (max-width: 767px) {\n    margin: 12px;\n  }\n`\nexport default DivContainer\n","import styled from \"@emotion/styled\"\nimport React from \"react\"\nimport PostCard from \"../components/PostCard/PostCard\"\nimport { v1 as uuid } from \"uuid\"\nfunction PostListContainer({ postList }) {\n  return (\n    <PostListContainerStyle>\n      {postList.length\n        ? postList.map(post => (\n            <div className=\"item\" key={uuid()}>\n              <PostCard post={post} />\n            </div>\n          ))\n        : \"준비 중\"}\n    </PostListContainerStyle>\n  )\n}\nconst PostListContainerStyle = styled.div`\n  width: fit-content;\n  .item {\n    float: left;\n  }\n  &::after {\n    content: \"\";\n    display: block;\n    clear: both;\n    visibility: hidden;\n  }\n  @media screen and (min-width: 1920px) {\n    * {\n      width: 10%;\n    }\n    .item {\n      padding: 20px;\n    }\n    margin: 30px -10px 0 0;\n  }\n  @media screen and (min-width: 1080px) and (max-width: 1919px) {\n    * {\n      width: 20%;\n    }\n    .item {\n      padding: 20px;\n    }\n    margin: 25px -10px 0 0;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1079px) {\n    * {\n      width: 25%;\n    }\n    .item {\n      padding: 16px;\n    }\n    margin: 20px -8px 0 0;\n  }\n  @media screen and (min-width: 375px) and (max-width: 767px) {\n    * {\n      width: 33%;\n    }\n    .item {\n      padding: 8px;\n    }\n    margin: 15px -4px 0 0;\n  }\n  @media screen and (max-width: 374px) {\n    * {\n      width: 50%;\n    }\n    .item {\n      padding: 6px;\n    }\n    margin: 10px -3px 0 0;\n  }\n`\nexport default PostListContainer\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport DivContainer from \"../components/DivContainer\"\nimport Layout from \"../components/Layout\"\nimport HeaderContainer from \"../containers/HeaderContainer\"\nimport PostListContainer from \"../containers/PostListContainer\"\nimport SlidePostContainer from \"../containers/SlidePostContainer\"\n\nconst Genre = ({ data, location }) => {\n  const { nodes: PostList } = data.allMarkdownRemark\n  const genre = location.state?.path\n  return (\n    <>\n      <HeaderContainer />\n      <Layout location={location}>\n        <DivContainer>\n          <h1>\n            총 {PostList.length}개의 {genre}\n          </h1>\n          <PostListContainer postList={PostList} />\n        </DivContainer>\n      </Layout>\n    </>\n  )\n}\nexport default Genre\n\nexport const pageQuery = graphql`\n  query filteredPost($genre: String) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___release], order: DESC }\n      filter: { frontmatter: { genre: { eq: $genre } } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          description\n          genre\n          poster\n          release\n          ott\n          countries\n          cover\n          end\n        }\n      }\n      totalCount\n    }\n  }\n`\n"],"names":["DivContainerStyle","styled","children","PostListContainerStyle","postList","length","map","post","className","key","uuid","PostCard","data","location","PostList","allMarkdownRemark","nodes","genre","state","path","HeaderContainer","Layout"],"sourceRoot":""}